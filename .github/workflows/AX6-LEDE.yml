name: LEDE Build Debug

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run with debugging enabled'
        required: false
        default: false
      custom_feeds:
        type: boolean
        description: 'Use Custom Feeds'
        required: false
        default: false
      custom_config:
        type: boolean
        description: 'Use Custom Config'
        required: false
        default: false

env:
  REPO_URL: https://github.com/Cathgao/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: https://raw.githubusercontent.com/WLWolf5/test6/main/immortal-feed.conf
  CONFIG_FILE: https://raw.githubusercontent.com/WLWolf5/test6/main/lede-full.config
  COMMIT_ID: 4bba40608bd2b9c05ee33cff62277a4efe7ebda7
  FRP_CONF: frpc.ini
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
#    timeout-minutes: 400

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        ulimit -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget python2 ocaml-nox
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        git checkout -b $COMMIT_ID
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        ln -sf /workdir/openwrt ~/openwrt

#    - name: Addition Packages
#      run: |
#        svn co 

    - name: Use Custom Feeds
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.custom_feeds }}
      run: |
        cd openwrt
        curl -Lo feeds.conf.default $FEEDS_CONF

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
      
    - name: Optimize luci
      run: |
        cd openwrt
        #curl -LO https://raw.githubusercontent.com/QiuSimons/YAOF/22.03/SCRIPTS/03_convert_translation.sh
        #chmod +x 03_convert_translation.sh
        #./03_convert_translation.sh
        curl -LO https://raw.githubusercontent.com/QiuSimons/YAOF/22.03/SCRIPTS/05_create_acl_for_luci.sh
        chmod +x 05_create_acl_for_luci.sh
        ./05_create_acl_for_luci.sh -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Use Custom Config
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.custom_config }}
      run: |
        cd openwrt
        curl -Lo .config $CONFIG_FILE
        make defconfig

    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}" >>$GITHUB_ENV

    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt

    - name: Get Optimize Script
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        curl -LO https://raw.githubusercontent.com/WLWolf5/test6/main/optimize.sh
        curl -LO https://raw.githubusercontent.com/WLWolf5/test6/main/optimize2.sh
        chmod +x optimize.sh optimize2.sh
        ./optimize.sh
        curl -LO https://raw.githubusercontent.com/WLWolf5/test6/main/compile.sh
        chmod +x compile.sh

    - name: Relay SSH
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      run: |
        sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        sudo cp -f frp/shadow /etc/shadow
        
    - name: Run Frp
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      run: |
        cd frp
        chmod 777 frpc
        ./frpc -c $FRP_CONF
        
#    - name: if failure
#      if: ${{ failure() }}
#      run: |

